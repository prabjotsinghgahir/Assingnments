AWSTemplateFormatVersion: 2010-09-09
Parameters:
  S3Bucketname:
    Type: String
    Default: innfy-pr-h
Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref S3Bucketname
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Function: !GetAtt LFunction.Arn
    DependsOn:
      - LPermission
  LPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName:
        'Fn::GetAtt':
          - LFunction
          - Arn
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: 'AWS::AccountId'
      SourceArn:
        'Fn::Sub': 'arn:aws:s3:::${S3Bucketname}'
    DependsOn:
      - LFunction
  LFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Role:
        'Fn::GetAtt':
          - IAMLF
          - Arn
      Code:
        ZipFile: |
          import boto3
          s = boto3.client('s3')
          def handler(event, context):
              source_bucket = event['Records'][0]['s3']['bucket']['name']
              file_name = event['Records'][0]['s3']['object']['key']
              dest_bucket_name = 'output-b-one'
              copy_object = {'Bucket':source_bucket, 'Key':file_name}
              s.copy_object(CopySource=copy_object,Bucket = dest_bucket_name,Key = file_name )
              print("Helooo fromm  me")
      Runtime: python3.8
      Handler: index.handler
  IAMLF:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
  S3B2:
    Type: 'AWS::S3::Bucket'
    Properties:
        BucketName: 'output-b-one'
